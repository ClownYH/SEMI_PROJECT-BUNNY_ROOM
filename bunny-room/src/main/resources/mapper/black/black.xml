<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yyc.bunnyroom.black.model.dao.BlackDAO">

    <resultMap id="blacklist" type="com.yyc.bunnyroom.black.model.dto.BlackDTO">
        <id property="blackNo" column="BLACK_NO"/>
        <result property="userNo" column="USER_NO"/>
        <result property="auth" column="BLACK_ORIGIN_AUTH"/>
        <result property="email" column="USER_EMAIL"/>
        <result property="nickname" column="USER_NICKNAME"/>
        <result property="phone" column="USER_PHONE"/>
        <result property="blackReason" column="BLACK_REASON"/>
        <result property="blackRegistDate" column="BLACK_REGIST_DATE"/>
        <result property="blackStatus" column="BLACK_STATUS"/>
        <result property="blackUpdateDate" column="BLACK_UPDATE_DATE"/>
        <result property="blackSentencePeriod" column="BLACK_SENTENCE_PERIOD"/>
    </resultMap>

    <select id="showAll" resultMap="blacklist">
        SELECT
            A.BLACK_NO,
            A.USER_NO,
            A.BLACK_ORIGIN_AUTH,
            B.USER_EMAIL,
            B.USER_NICKNAME,
            B.USER_PHONE,
            A.BLACK_REASON,
            A.BLACK_REGIST_DATE,
            A.BLACK_STATUS,
            A.BLACK_UPDATE_DATE,
            A.BLACK_SENTENCE_PERIOD
        FROM
            TBL_BLACKLIST AS A
        JOIN
            TBL_USER AS B ON (A.USER_NO = B.USER_NO)
        WHERE
            A.BLACK_STATUS = 'active'
        ORDER BY
            A.BLACK_NO DESC;
    </select>
    

    <insert id="addBlacklist" parameterType="com.yyc.bunnyroom.black.model.dto.BlackDTO">
        INSERT INTO TBL_BLACKLIST(
            BLACK_NO,
            USER_NO,
            BLACK_ORIGIN_AUTH,
            BLACK_REASON,
            BLACK_REGIST_DATE,
            BLACK_STATUS,
            BLACK_SENTENCE_PERIOD
        )VALUES(
            NULL,
            #{userNo},
            #{auth},
            #{reason},
            #{registDate},
            'active',
            #{sentenceTime}
        )
    </insert>

    <update id="modifyBlacklist" parameterType="com.yyc.bunnyroom.black.model.dto.BlackDTO">
        UPDATE TBL_BLACKLIST
        SET
            BLACK_REASON = #{reason},
            BLACK_UPDATE_DATE = #{updateDate},
            BLACK_STATUS = 'active',
            BLACK_SENTENCE_PERIOD = #{sentenceTime}
        WHERE
            USER_NO = #{userNo}
    </update>

    <select id="searchBlackByEmail" resultMap="blacklist">
        SELECT
            A.BLACK_NO,
            A.USER_NO,
            A.BLACK_ORIGIN_AUTH,
            B.USER_EMAIL,
            B.USER_NICKNAME,
            B.USER_PHONE,
            A.BLACK_REASON,
            A.BLACK_REGIST_DATE,
            A.BLACK_STATUS,
            A.BLACK_UPDATE_DATE,
            A.BLACK_SENTENCE_PERIOD
        FROM
            TBL_BLACKLIST AS A
        JOIN
            TBL_USER AS B ON (A.USER_NO = B.USER_NO)
        WHERE
            A.BLACK_STATUS = 'active'
            AND
            B.USER_EMAIL = #{email}
        ORDER BY
            A.BLACK_NO DESC;
    </select>

    <select id="showBlacklistByEmail" resultMap="blacklist">
        SELECT
            A.BLACK_NO,
            A.USER_NO,
            A.BLACK_ORIGIN_AUTH,
            B.USER_EMAIL,
            B.USER_NICKNAME,
            B.USER_PHONE,
            A.BLACK_REASON,
            A.BLACK_REGIST_DATE,
            A.BLACK_STATUS,
            A.BLACK_UPDATE_DATE,
            A.BLACK_SENTENCE_PERIOD
        FROM
            TBL_BLACKLIST AS A
        JOIN
            TBL_USER AS B ON (A.USER_NO = B.USER_NO)
        WHERE
            A.BLACK_STATUS = 'active'
            AND
            B.USER_EMAIL LIKE #{param}
        ORDER BY
            A.BLACK_NO DESC;
    </select>

    <select id="showBlacklistByNickname" resultMap="blacklist">
        SELECT
            A.BLACK_NO,
            A.USER_NO,
            A.BLACK_ORIGIN_AUTH,
            B.USER_EMAIL,
            B.USER_NICKNAME,
            B.USER_PHONE,
            A.BLACK_REASON,
            A.BLACK_REGIST_DATE,
            A.BLACK_STATUS,
            A.BLACK_UPDATE_DATE,
            A.BLACK_SENTENCE_PERIOD
        FROM
            TBL_BLACKLIST AS A
        JOIN
            TBL_USER AS B ON (A.USER_NO = B.USER_NO)
        WHERE
            A.BLACK_STATUS = 'active'
            AND
            B.USER_NICKNAME LIKE #{param}
        ORDER BY
            A.BLACK_NO DESC;
    </select>

    <select id="showBlacklistByPhone" resultMap="blacklist">
        SELECT
            A.BLACK_NO,
            A.USER_NO,
            A.BLACK_ORIGIN_AUTH,
            B.USER_EMAIL,
            B.USER_NICKNAME,
            B.USER_PHONE,
            A.BLACK_REASON,
            A.BLACK_REGIST_DATE,
            A.BLACK_STATUS,
            A.BLACK_UPDATE_DATE,
            A.BLACK_SENTENCE_PERIOD
        FROM
            TBL_BLACKLIST AS A
        JOIN
            TBL_USER AS B ON (A.USER_NO = B.USER_NO)
        WHERE
            A.BLACK_STATUS = 'active'
            AND
            B.USER_PHONE LIKE #{param}
        ORDER BY
            A.BLACK_NO DESC;
    </select>

    <update id="disableBlack" parameterType="com.yyc.bunnyroom.black.model.dto.BlackDTO">
        UPDATE TBL_BLACKLIST
        SET
            BLACK_STATUS = 'inactive',
            BLACK_UPDATE_DATE = #{updateDate},
            BLACK_SENTENCE_PERIOD = NULL
        WHERE
            USER_NO = #{userNo}
    </update>

    <select id="showBlacklistByInactive" resultMap="blacklist">
        SELECT
            A.BLACK_NO,
            A.USER_NO,
            A.BLACK_ORIGIN_AUTH,
            B.USER_EMAIL,
            B.USER_NICKNAME,
            B.USER_PHONE,
            A.BLACK_REASON,
            A.BLACK_REGIST_DATE,
            A.BLACK_STATUS,
            A.BLACK_UPDATE_DATE,
            A.BLACK_SENTENCE_PERIOD
        FROM
            TBL_BLACKLIST AS A
        JOIN
            TBL_USER AS B ON (A.USER_NO = B.USER_NO)
        WHERE
            A.BLACK_STATUS = 'inactive'
        ORDER BY
            A.BLACK_NO DESC;
    </select>

    <select id="searchBlackByEmailInAny" resultMap="blacklist">
        SELECT
            A.BLACK_NO,
            A.USER_NO,
            A.BLACK_ORIGIN_AUTH,
            B.USER_EMAIL,
            B.USER_NICKNAME,
            B.USER_PHONE,
            A.BLACK_REASON,
            A.BLACK_REGIST_DATE,
            A.BLACK_STATUS,
            A.BLACK_UPDATE_DATE,
            A.BLACK_SENTENCE_PERIOD
        FROM
            TBL_BLACKLIST AS A
        JOIN
            TBL_USER AS B ON (A.USER_NO = B.USER_NO)
        WHERE
            (A.BLACK_STATUS = 'inactive'
            OR
            A.BLACK_STATUS = 'active')
            AND
            B.USER_EMAIL = #{email}
        ORDER BY
            A.BLACK_NO DESC;
    </select>

    <select id="searchBlacklistByUserNo" resultMap="blacklist">
        SELECT
            *
        FROM
            TBL_BLACKLIST
        WHERE
            USER_NO = #{userNo}
    </select>

    <update id="changeUserStatus" parameterType="com.yyc.bunnyroom.admin.model.dto.MemberDTO">
        UPDATE TBL_USER
        SET
            USER_STATUS = 'black',
            USER_UPDATE_DATE = #{updateDate}
        WHERE
            USER_NO = #{userNo}
    </update>

    <update id="restoreUserStatus" parameterType="com.yyc.bunnyroom.admin.model.dto.MemberDTO">
        UPDATE TBL_USER
        SET
        USER_STATUS = 'active',
        USER_UPDATE_DATE = #{updateDate}
        WHERE
        USER_NO = #{userNo}
    </update>
</mapper>